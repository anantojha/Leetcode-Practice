/*  Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.
 *  Your algorithm's runtime complexity must be in the order of O(log n).
 *  If the target is not found in the array, return [-1, -1].
 *  Example:
 *                Input: nums = [5,7,7,8,8,10], target = 8
 *                Output: [3,4]
*/


class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> res; res.push_back(-1); res.push_back(-1);
        int ctr = 0;
        int i =0;
        for(; i < nums.size(); ++i){
            
            if(nums.at(i) == target ){
                if(res.front() == -1)
                    res.front() = i;
                else
                    ctr++;
            }
        }
        res.back() = res.front() + ctr;
        return res;    
    }
};
 
