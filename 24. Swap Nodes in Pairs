/*
 *  Given a linked list, swap every two adjacent nodes and return its head.
 *  You may not modify the values in the list's nodes, only nodes itself may be changed.
 *  Example:
 *              Given 1->2->3->4, you should return the list as 2->1->4->3. 
 */
 
 
class Solution {
public:
    
    
    void swap(int* a, int* b) 
    {   
        int temp; 
        temp = *a; 
        *a = *b; 
        *b = temp; 
    } 
    
    
    ListNode* swapPairs(ListNode* head) {
        if(head == NULL)
            return NULL;
        
        ListNode* curr = head;
        while(curr != NULL && curr->next != NULL){
            swap(&curr->val, &curr->next->val);
            curr = curr->next->next;     
        }
        return head;
    }
};
