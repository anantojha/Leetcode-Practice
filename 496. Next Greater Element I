/*
 *  You are given two arrays (without duplicates) nums1 and nums2 where nums1â€™s elements are subset of nums2. 
 *  Find all the next greater numbers for nums1's elements in the corresponding places of nums2.
 *  The Next Greater Number of a number x in nums1 is the first greater number to its right in nums2. 
 *  If it does not exist, output -1 for this number.
 *  Example:
 *              Input:  nums1 = [4,1,2], nums2 = [1,3,4,2].
 *              Output: [-1,3,-1]
*/
 
class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        vector<int> vec;
        int s1 = nums1.size(); int s2 = nums2.size();
        bool found;
        for(int i = 0; i<s1; ++i){
            found = false;
            for(int j =0; j<s2; ++j){
                if(nums1.at(i) == nums2.at(j)){
                    if(s2 > j+1){
                        for(int k =j; k<s2; ++k){
                            if(nums1.at(i) < nums2.at(k)){
                                vec.push_back(nums2.at(k)); found = true;
                                break;
                            }
                        }
                        if(found == false)
                            vec.push_back(-1);
                    }
                    else
                         vec.push_back(-1);
                }
            }
        }
        return  vec;   
    }
};
