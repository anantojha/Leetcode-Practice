/*
 *  Given a linked list, determine if it has a cycle in it.
 *  To represent a cycle in the given linked list, we use an integer pos which represents the position 
 *  (0-indexed) in the linked list where tail connects to. If pos is -1, then there is no cycle in the linked list.
*/


class Solution {
public:
    bool hasCycle(ListNode *head) {
        
        ListNode* p = head;
        ListNode* q = head;
        int found = 0;
        while(p != NULL && q != NULL && q->next != NULL){
            
            p = p->next;
            q = q->next->next;
            if(p == q){
                found = 1;
                break;
            }
        }
        
        if(found == 0)
            return false;
        else
            return true;
        
    }
};
