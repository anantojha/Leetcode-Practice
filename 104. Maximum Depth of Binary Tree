/*
 *  Given a binary tree, find its maximum depth.
 *  The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
 *  Note: A leaf is a node with no children.
 *  Example:
 *                Given binary tree [3,9,20,null,null,15,7],
 *                      3
 *                     / \
 *                    9  20
 *                      /  \
 *                     15   7
 *                return its depth = 3.
 *
 *
*/

class Solution {
    public int maxDepth(TreeNode root) {
        
        if(root == null)
            return 0;
        else{
            int l_depth = maxDepth(root.left);
            int r_depth = maxDepth(root.right);
            
            if(l_depth > r_depth)
                return (l_depth + 1);
            else
                return (r_depth + 1);
            
        }       
    }
}
